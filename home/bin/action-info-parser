#!/usr/bin/env ruby

require 'json'

if ARGV.size < 1
  $stderr.puts <<EOF

usage: #{File.basename $0, '.rb'} { <log_file> | - } [<count>]

   Use a single dash to read from standard input.

   Count indicates number of action_info entries to show before exiting.

   For example,

     > tail -r production_log.expanded | grep -F ca414de4-99d5-4e5c-8259-025760d5756b | action-info-parser -

EOF
  exit 1
end

logf = ARGV[0] == '-' ? $stdin : File.open(ARGV[0])
count = (ARGV[1] || 1).to_i

logf.each_line do |line|
  line.include?('action_info') or next
  i = line.index('{"controller":') or next
  hdr = line.slice!(0, i)
  items = JSON.load(line)
  params = items['params']
  action_info = JSON.load(params.delete('action_info'))
  data = action_info['data']
  counts = [:add_or_update,:move,:delete].inject({}){|h,s| h[s] = (data[s.to_s] || []).size; h}
  puts '-'*100, "#{hdr} #{items}"
  puts JSON.pretty_generate(action_info), counts
  count -= 1
  count > 0 or break
end

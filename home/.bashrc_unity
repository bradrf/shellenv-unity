#  -*- mode: shell-script -*-

[ -d /opt/unity/unitycloud-ops ] && export UNITYCLOUDOPS=/opt/unity/unitycloud-ops

EC2_ROLE="${EC2_ROLE#fullstack-}"

if [ -n "$EC2_ROLE" ]; then
    SECRET_FILE=`find /var/opt -name "${EC2_ROLE}-secret_token.${EC2_ENV}" | xargs ls -t | head -1`
    [ -r "$SECRET_FILE" ] && . "$SECRET_FILE"
fi

alias reset_dev='rm -rfv devrepos/* db/*.sqlite3; rake db:migrate'

if $IAMME && $INTERACTIVE && ihave s; then
    shopt -s nullglob # empty list if no match
    # FIXME: this assignes unity-collab-ui to be collab (fix to know -service or -ui)
    for d in /opt/unity/unity*; do
        n=`basename "$d" | cut -d- -f2`
        t=`basename "$d" | cut -d- -f3`
        [ "$t" = 'service' ] || n="${n}${t}"
        test -f "$SDIRS" && grep -q "$n" "$SDIRS" && continue
        [ -d "${d}/current" ] && d="${d}/current"
        (cd "$d" && s "$n")
    done
    shopt -u nullglob
    [ -f "$SDIRS" ] && chmod 644 "$SDIRS" # allow nobody and others to read bashmark entries
fi

function health()
{(
    set -x
    ls -ld `readlink /opt/unity/unity-collab-service/current`
    myps unicorn
    curl -qfs http://localhost/api/health | prettyjson
    curl -qsf http://localhost/api/disk | prettyjson
)}

function sshrails()
{
    local rhost srvc
    if [ $# -lt 1 ]; then
        echo 'usage: sshrails <remote_host> [<rails_options>...]' >&2
        return 1
    fi

    rhost="$1"; shift

    \ssh -t "$rhost" bash -ic "'
sudo -u nobody -i bash -c \"\
cd /opt/unity/unity-\${EC2_ROLE}-service/current;\
. \$SECRET_FILE;\
export RAILS_ENV=\$EC2_ENV;\
bin/rails "$@"\"'"
}

function volfor()
{
    if $IAMME; then
        sudo su -c 'ls -d /mnt/repos/volume*/*/'$1
    else
        ls -d /mnt/repos/volume*/*/$1
    fi
}

function beanview()
{
    if [ $# -ne 1 ]; then
        echo 'usage: beanstalkd_view <host>' >&2
        return 1
    fi

    local privip
    if [[ $1 = production-* || $1 = staging-* ]]; then
        privip=`grep -A1 -F $1.private ~/.ssh/config | tail -1 | awk '{print $2}'`
    else
        privip=127.0.0.1
    fi

    local port=$(( ((RANDOM<<15)|RANDOM) % 63001 + 2000 ))
    \ssh -L$port:$privip:11300 -o 'ExitOnForwardFailure yes' -nfN $1 || return $?
    local sshpid=`pgrep -f ExitOnForwardFailure`

    BEANSTALK_URL="beanstalk://localhost:$port/" \beanstalkd_view -F
    kill $sshpid
}
complete -F _ssh beanview
